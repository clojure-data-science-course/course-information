* Clojure Data Science Course -- General Information

This repo holds general information about the Clojure Data Science Course that will begin in Tel Aviv towards the end of 2018.

The course is organized by our [[https://www.meetup.com/Clojure-Israel/][local meetup group]]. Several members have been contributing to the course.

** Meetings

[[https://www.meetup.com/Clojure-Israel/events/255927870/][Meeting A1]] - Nov 25th 2018

[[https://www.meetup.com/Clojure-Israel/events/256159018/][Meeting B1]] - Nov 28th 2018

** How can I help?

[[docs/help.org][here]]

** Intro 

Are you a data scientist or analyst looking for new tools and new ways of thought? Are you curious to know what Clojure is? Then this free course is for you.

Are you an experienced Clojurian, curious about data science? Then you are invited too -- you will probably find this interesting and useful as well.

Clojure is a programming language. It presents a unique blend of Computer Science paradigms, mainly Lisp and Functional Programming. It also offers a certain culture of thought, which calls for simplicity, focus on data, interactive experience and a dynamic flow of creativity. The fusion of all these allows for a rather joyful programming experience.

The purpose of this course is to study Clojure as a practical tool for data science.

[[./images/joy.jpg]]

** Goals
- Create a study group -- a team of people willing to think and learn together.
- Have fun.
- Learn new methods and tools.
- In few months, create a group of people who love to do data science using Clojure.

** What should I do to join the course?
- Please contact the [[https://www.meetup.com/Clojure-Israel/members/63580692/][course organizer]] in person.

** The format
- We will divide into two small groups, of up to 12 people each.
- Every 3 weeks we will have two meetings of identical content -- one for each group. At least one of them will be held in English.
- In about 6 meetings, people should gain some reasonable practical independence with the language.
- We will have at least 12 meetings -- that is, till the middle of the summer. Then, we may decide to continue with more advanced topics.
- On the first meetings, the first hour will be for beginners' material. People who feel more experienced will be able to join at the beginning of the second hour.

** Homework
- We will have practical homework tasks. They may include some reading.
- We will discuss the homework at some common web space.
- After several meetings, we may suggest some optional larger home project.

** Time
- Group A meetings: Sunday 18:00-21:00 every 3 weeks.
- Group B meetings: Wednesday 18:00-21:00 every 3 weeks.
- If people feel like it, we will have occasional meetings for doing homework and training together.

** Place
Madlan (Localize.city) offices at Yigal Alon St 57, Tel Aviv.

** Course plan
[[docs/plan.org][here]]

** Recommended reading

If you feel stuck or are facing any difficulty with your reading -- let us talk!

*** Learning Clojure
**** Clojure for the Brave and True
 [[https://www.braveclojure.com/clojure-for-the-brave-and-true/][This]] book by Daniel Higginbotham ([[https://twitter.com/nonrecursive?lang=en][@nonrecursive]]) is an excellent way to prepare for the course. Several of us used it as a first book for Clojure. The most relevant chapters are 1,3,4,5,(6),9,11,12.

**** Clojurebridge
 [[https://twitter.com/clojurebridge][ClojureBridge]] is an [[https://clojurebridge.org/][organization]] aiming at making Clojure more accessible to underrepresented groups in tech. It has been organizing workshops in different places during the last several years.
 They wrote [[https://clojurebridge.org/curriculum/#/][this]] short beginner-friendly presentation.

**** Practicalli Clojure
 [[https://practicalli.github.io/clojure/][This]] is a new book by John Stevenson ([[https://twitter.com/jr0cket][@jr0cket]]), under construction. It is part of the [[http://www.practical.li/][Practical.li]] series. You may find its first few sections useful as a guide for building your learning process and for finding other resources.

*** Documentation

**** ClojureDocs
     [[https://clojuredocs.org/][This]] project is the main place to go.

*** Data science with Clojure
Here are some blogs to follow:
- [[https://dragan.rocks/][dragan.rocks]] by [[https://twitter.com/draganrocks][Dragan Djuric]] for linear algebra, high performance computing, etc.
- [[http://gigasquidsoftware.com/#/blog/archives/index][Squid's Blog]] by [[https://twitter.com/carinmeier][Carin Meier]] for machine learning and artificial intelligence.

**** Statistics
[[https://twitter.com/izhmyh][Andrey Romanov]] wrote [[https://github.com/drewnoff/openintro-gorilla-incanter][this]] introduction to statistics with Clojure. It it written with [[http://gorilla-repl.org/][gorilla-repl]].

** Tools

Here are some suggestions for the software tools that you may use in the course.

If you have any difficulty with the installation or usage -- then let us talk. It is better to solve this kind of problems at early stages.

*** The minimum
You will at least need Java (JDK version 8 or above) and Leiningen. You may use [[https://practicalli.github.io/clojure/development-tools/][the guide]] of Practical.li for installing them.

*** Notebooks
In most of our talks will use [[http://jupyter.org/][Jupyter]] notebooks -- not because we beleive it is the best tool, but because it is comfortable for didactic purposes.

For this course, we recommend [[https://github.com/clojupyter/lein-jupyter][lein-jupyter]], which is a convenience wrapper around [[https://github.com/clojupyter/clojupyter][clojupyter]].

**** Other options

Another way to use Jupyter is [[http://beakerx.com/][BeakerX]]. We prefer not to use it here, because it seems to play less naturally together with other tools.

Another type of notebook environment, dedicated to Clojure, is [[http://gorilla-repl.org/][gorilla-repl]]. It has its own visualization library and very interesting ideas regarding composable visual reports. It is rather common among Clojure data scientists.

*** Editors
At about the 4th meeting, when we start writing larger pieces of code, it will become important to use a proper code editor.

Practical.li has nice [[https://practicalli.github.io/clojure/development-tools/install-guides/][installation guides]] for several editors.

At our talks we will use VSCode.

**** Other options

If you like Emacs, then you can also use the [[https://www.braveclojure.com/basic-emacs/][installation guide]] at Higginbotham's book.

If you like Spacemacs, then you can also use the more [[https://practicalli.github.io/spacemacs/][detailed guide]] by Practical.li.

Another option is [[https://sekao.net/nightcode/][Nightcode]] - a minimalistic editor, dedicated to Clojure, which is rather easy to install.

*** Trying Clojure online.

 For your practice, you may also use Clojure online.
 - [[https://repl.it/languages/clojure][repl.it]] - here you can try the language online.

** Keep in touch
- We use this [[https://groups.google.com/forum/#!forum/clojure-data-science-course-tlv][discussion mail group]].
- We will also set a web space place for chat-like discussions.

** More details
See some discussions [[https://www.meetup.com/Clojure-Israel/events/255927870/][on the page of the first meeting]].
